

--- event ticket page - bugs / changes
- maybe make placeholder example text lighter colour or italics
- don't need price range entry fields, just sort all tickets by price and included highest and lowest
- being able to remove ticket types is a problem if users have already purchased - maybe just change to del flg - but still needs to acknowledge that a ticket has been bought and someone has spent money - OR disable this feature for when tickets have been purchased and prompt user/seller to contact ticket distributer (event ticket page) directly to take the listing down
- rethink the available tickets feature - doesn't really work if someone buys a ticket at the same time as the seller manually edits the input field


- proper time format for time form input
- allow for multiple days - i.e. when event goes past midnight (or some festivals might be 2 days or more)
- text blocks for event summary and description does not keep line/paragraph spacing in the display pages
- allow users to buy multiple tickets without having to keep navigating back to event listings screen and manually add another one each time
- use a separate display ticket id, not the id for the ticket data entry in the db (keep this confidential)
- when fields are not filled in and user cannot proceed, indicate to the user which fields are missing (also add a 'required' notation for all required fields)
- add test files !!!

- ideally, I think updateAvailableTickets should be included in the userController where an order is created, not as a separate API call

- consider whether things such as orders should be stored in a separate collection (i.e. if add a new feature where sellers can see details of all tickets that have been purchased, it might be more beneficial to have this data stored in a separate collection/table. Plus side of mongoDB over SQL though is that it can be included in the users collection as it has been - same for basket, etc... and for only adding data for relevant users - i.e. not for sellers)


- in a real app, the validation for the billing address, login details, etc... would be stricter, but as this app is for testing/sample purpose only, they were made lenient with the target audience being recruiters/etc.. in mind, not actual sellers and customers.

- in real app, upon paypal payment completion, don't show console logs







========================================

At the moment, images are not being uploaded anywhere. They are simply being put into the flyers folder in the local version of the project, then being added to github, and mongoDB is just saving the pathname of that location (hence images uploaded locally are display in both local and deployed versions)
(so images uploaded on the deployed version aren't actually being saved anywhere)

-- this is because to upload images to mongoDB directly is a bit more complicated, and it seems to be recommended to upload to separate storage (which is what I would set up in a real app) and then reference that url
https://www.mongodb.com/community/forums/t/storing-images-in-mongodb/152599 

